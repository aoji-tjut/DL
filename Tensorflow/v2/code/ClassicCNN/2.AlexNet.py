import tensorflow as tf

model = tf.keras.models.Sequential()
model.add(tf.keras.layers.Conv2D(filters=96, kernel_size=11, strides=4, input_shape=[227, 227, 3]))
model.add(tf.keras.layers.BatchNormalization())
model.add(tf.keras.layers.ReLU())
model.add(tf.keras.layers.MaxPool2D(pool_size=3, strides=2))
model.add(tf.keras.layers.Conv2D(filters=256, kernel_size=5, strides=1, padding="same"))
model.add(tf.keras.layers.BatchNormalization())
model.add(tf.keras.layers.ReLU())
model.add(tf.keras.layers.MaxPool2D(pool_size=3, strides=2))
model.add(tf.keras.layers.Conv2D(filters=384, kernel_size=3, strides=1, activation="relu", padding="same"))
model.add(tf.keras.layers.Conv2D(filters=384, kernel_size=3, strides=1, activation="relu", padding="same"))
model.add(tf.keras.layers.Conv2D(filters=256, kernel_size=3, strides=1, activation="relu", padding="same"))
model.add(tf.keras.layers.MaxPool2D(pool_size=3, strides=2))
model.add(tf.keras.layers.Flatten())
model.add(tf.keras.layers.Dense(4096, activation="relu"))
model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Dense(4096, activation="relu"))
model.add(tf.keras.layers.Dropout(0.5))
model.add(tf.keras.layers.Dense(1000, activation="softmax"))
model.summary()
